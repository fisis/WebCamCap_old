#include "markerpoint.h"

MarkerPoint::MarkerPoint(QTreeWidgetItem *item, MarkerPoint *parent)
{
    vec3 offset = vec3( item->text(1).toFloat(), item->text(2).toFloat(), item->text(3).toFloat());

    OffsetFromRoot = offset;
    Name = item->text(0).toStdString();
    Parent = parent;
    ID = -1;

}

MarkerPoint::MarkerPoint(vec3 offset, std::string name, MarkerPoint *parent, int ID)
{
    OffsetFromRoot = offset;
    Name = name;
    Parent  = parent;
    this->ID = ID;
}

void MarkerPoint::AddChild(MarkerPoint *child)
{
    Childs.push_back(child);
    Distances.push_back(PointDistance(OffsetFromRoot, child->getOffset()));
}

void MarkerPoint::SaveHierarchy(ExportFormat format, std::ofstream &outputFile)
{
    switch (format) {
    case Project:

        break;
    default:
        break;
    }
}

void MarkerPoint::SaveMotion(ExportFormat format, std::ofstream &outputFile)
{

}

float MarkerPoint::PointDistance(vec3 point1, vec3 point2)
{
    vec3 vector = point2 - point1;

    return glm::sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
}

float MarkerPoint::PointDistance(vec2 point1, vec2 point2)
{
    vec2 vector = point2 - point1;

    return glm::sqrt(vector.x * vector.x + vector.y * vector.y);
}
