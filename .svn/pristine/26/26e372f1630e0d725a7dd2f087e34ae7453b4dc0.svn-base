#include "structureeditor.h"
#include "ui_structureeditor.h"

#include <QToolBar>
#include <QVBoxLayout>
#include <QTextEdit>

StructureEditor::StructureEditor(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::StructureEditor)
{
    currentItem = NULL;

    ui->setupUi(this);
}

StructureEditor::~StructureEditor()
{
    delete ui;
}

void StructureEditor::BuildStructure()
{
    structure = new ModelStructure(ui->Editor);
}

void StructureEditor::on_Add_clicked()
{
    if(currentItem == NULL)
    {
        QTreeWidgetItem* item = new QTreeWidgetItem(QStringList("New Point " + QString::number(ui->Editor->topLevelItemCount())));
        item->setFlags(Qt::ItemIsEditable | Qt::ItemIsEnabled | Qt::ItemIsSelectable);
        ui->Editor->addTopLevelItem(item);

        return;
    }

    if(currentItem->parent() != NULL)
    {
        QTreeWidgetItem* item = new QTreeWidgetItem(currentItem->parent() , QStringList("New Point " + QString::number(currentItem->parent()->childCount())));
        item->setFlags(Qt::ItemIsEditable | Qt::ItemIsEnabled | Qt::ItemIsSelectable);
        currentItem->parent()->addChild(item);
    }
    else
    {
        QTreeWidgetItem* item = new QTreeWidgetItem(currentItem->parent() , QStringList("New Point " + QString::number(ui->Editor->topLevelItemCount())));
        item->setFlags(Qt::ItemIsEditable | Qt::ItemIsEnabled | Qt::ItemIsSelectable);
        ui->Editor->addTopLevelItem(item);
    }
}

void StructureEditor::on_AddChild_clicked()
{
    if(currentItem != NULL)
    {
      QTreeWidgetItem* item = new QTreeWidgetItem(currentItem , QStringList("New Point " + QString::number(currentItemChildCount)));
      item->setFlags(Qt::ItemIsEditable | Qt::ItemIsEnabled | Qt::ItemIsSelectable);
      currentItem->addChild(item);
    }
}

void StructureEditor::on_Remove_clicked()
{
    if(currentItem != NULL)
    {
        currentItem->~QTreeWidgetItem();
    }
}

void StructureEditor::on_Up_clicked()
{

}

void StructureEditor::on_Down_clicked()
{

}

void StructureEditor::on_buttonBox_accepted()
{
    BuildStructure();
}

void StructureEditor::on_Editor_currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous)
{
    currentItem = current;

    if(currentItem != NULL)
    {
        currentItemColumn = ui->Editor->currentColumn();
        currentItemChildCount = currentItem->childCount();
    }
}
