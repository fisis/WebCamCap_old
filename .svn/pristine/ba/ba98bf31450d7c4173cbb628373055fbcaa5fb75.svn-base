#ifndef MARKERPOINT_H
#define MARKERPOINT_H

#include <fstream>
#include <vector>
#include <glm/glm.hpp>

#include <QTreeWidget>

using namespace glm;

enum ExportFormat
{
    BVH,
    CSM,
    SDL,
    Project
};

class MarkerPoint
{
    int ID;
    std::string Name;
    vec3 OffsetFromRoot;

    MarkerPoint* Parent;

    std::vector<MarkerPoint*> Childs;
    std::vector<float> Distances;
public:
    MarkerPoint(QTreeWidgetItem *item, MarkerPoint *parent);
    MarkerPoint(vec3 offset, std::string name, MarkerPoint* parent = NULL, int ID = -1);

    void AddChild(MarkerPoint *child);
    void SaveHierarchy(ExportFormat format, std::ofstream &outputFile);
    void SaveMotion(ExportFormat format,  std::ofstream &outputFile);

    vec3 getOffset() const {return OffsetFromRoot;}
    int getID() const {return ID;}
    std::vector<float> getDistances() const {return Distances;}

    void setID(int id) {ID = id;}

    static float PointDistance(vec3 point1, vec3 point2);
    static float PointDistance(vec2 point1, vec2 point2);
private:

};

#endif // MARKERPOINT_H
